service: upload
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x

# some variables
some:
  s3:
    bucket: leaf3bbilguunbucket

files:
  createApproachUrl: handlers/createApproachUrl.handler
  handleImagesUrl: handlers/handleImagesUrls.handler

# --

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:some.s3.bucket}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
                - GET
                - DELETE
                - POST
              AllowedOrigins:
                - '*'
    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Statement:
            - Action:
                - s3:ListBucket
                - s3:GetObject
                - s3:PutObject
                - s3:DeleteObject
              Resource:
                - arn:aws:s3:::${self:some.s3.bucket}/*
                - arn:aws:s3:::${self:some.s3.bucket}
              Effect: Allow
              Principal: '*'

# resources:
#   Resources:
#     bbdevs:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: ${self:some.s3.bucket}
#     SampleBucketPolicy:
#       Type: AWS::S3::BucketPolicy
#       Properties:
#         Bucket: !Ref bbdevs
#         PolicyDocument:
#           Statement:
#             - Action:
#                 - "s3:GetObject"
#                 - "s3:PutObject"
#               Effect: Allow
#               Resource:
#                 - arn:aws:s3:::${self:some.s3.bucket}/*
#               Principal: '*'

functions:
  createApproachUrl:
    handler: ${self:files.createApproachUrl}
    events:
      - http:
          path: url
          method: post
          cors: true
  handleUrls:
    handler: ${self:files.handleImagesUrl}
    events:
      - http: 
          path: handle
          method: get
          cors: true
